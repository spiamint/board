
plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-devtools'

	//MyBatis 추가 (spring 이 버전관리 안해주므로 버전 기입)
	// 추가로 application.properties 에서 mybatis 설정 해줘야 된다.
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	// mysql
	runtimeOnly 'mysql:mysql-connector-java'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//oauth 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//spring security (oauth 위해)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// 타임리프에서 스프링시큐리티의 문법이나 형식을 지원하는 확장팩 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// amazon s3bucket 연계
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// 자바9 이상에서 제거된 javax-api 종속성 추가 (아마존에서 사용하는듯)
	implementation 'javax.xml.bind:jaxb-api:2.2.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

// plain 제거
jar {
	enabled = false
}


// bootJar 에 .platform 폴더 추가
//bootJar {
//	from('./.platform') { into '.platform' }
//	from('./.ebextensions') { into '.ebextensions'}
//}


// chatGPT3 로 생성한 build =============================================================

task buildAwsEb(type: Zip) {
	from bootJar.outputs.files
	from('.ebextensions') {
		into '.ebextensions'
	}
	from('.platform') {
		into '.platform'
	}
	archiveName 'myproject.zip'
	destinationDir file('build/libs')
}

build.dependsOn bootJar
build.dependsOn buildAwsEb